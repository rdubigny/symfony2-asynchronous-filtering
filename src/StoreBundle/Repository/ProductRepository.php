<?php

namespace StoreBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{
    public function findByMultiple($filterData)
    {
        /* @var $qb QueryBuilder */
        $qb = $this->createQueryBuilder('product');
        $qb->select('product');

        if($filterData && $filterData['search']) {
            $qb->join('product.brand', 'brand');

            $searchTerms = preg_split('/[\s]+/', $filterData['search']);
            foreach ($searchTerms as $index => $searchTerm) {
                $qb->andWhere($qb->expr()->orX(
                    $qb->expr()->like('product.title', ":searchTerm$index"),
                    $qb->expr()->like('product.description', ":searchTerm$index"),
                    $qb->expr()->like('brand.title', ":searchTerm$index")
                ))
                    ->setParameter("searchTerm$index", "%$searchTerm%");
            }
        }

        if($filterData && $filterData['brands']->toArray()) {
            $qb->andWhere('IDENTITY(product.brand) IN (:brand_ids)')
                ->setParameter('brand_ids', array_map(
                    function ($brand) {return $brand->getId();},
                    $filterData['brands']->toArray()
                ));
        }

        return $qb->getQuery()->getResult();
    }
}
